[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-02-19T21:46:55.223Z",
        "before": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to see all 12 months in months dropdown",
        "description": "",
        "id": "simple-examples-of-how-datatables-work;user-should-be-able-to-see-all-12-months-in-months-dropdown",
        "after": [
          {
            "result": {
              "duration": 1002000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3616000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 5,
            "name": "User is on the dropdowns page of practice tool",
            "match": {
              "location": "com.cybertek.step_definitions.DataTables_StepDefinitions.user_is_on_the_dropdowns_page_of_practice_tool()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 595000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User should see below info in month dropdown",
            "match": {
              "location": "com.cybertek.step_definitions.DataTables_StepDefinitions.user_should_see_below_info_in_month_dropdown(java.util.List\u003cjava.lang.String\u003e)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "January"
                ]
              },
              {
                "cells": [
                  "February"
                ]
              },
              {
                "cells": [
                  "March"
                ]
              },
              {
                "cells": [
                  "April"
                ]
              },
              {
                "cells": [
                  "May"
                ]
              },
              {
                "cells": [
                  "June"
                ]
              },
              {
                "cells": [
                  "July"
                ]
              },
              {
                "cells": [
                  "August"
                ]
              },
              {
                "cells": [
                  "September"
                ]
              },
              {
                "cells": [
                  "October"
                ]
              },
              {
                "cells": [
                  "November"
                ]
              },
              {
                "cells": [
                  "December"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@dataTable"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:00.471Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 22,
        "name": "User should be able to login with correct credentials",
        "description": "",
        "id": "simple-examples-of-how-datatables-work;user-should-be-able-to-login-with-correct-credentials",
        "after": [
          {
            "result": {
              "duration": 1001000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 200000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User is on the login page of SmartBear",
            "match": {
              "location": "com.cybertek.step_definitions.DataTables_StepDefinitions.user_is_on_the_login_page_of_smart_bear()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 840000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User enters below info",
            "match": {
              "location": "com.cybertek.step_definitions.DataTables_StepDefinitions.user_enters_below_info(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "username",
                  "Tester"
                ]
              },
              {
                "cells": [
                  "password",
                  "test"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 27,
            "name": "User should see title changed to Web Orders",
            "match": {
              "location": "com.cybertek.step_definitions.DataTables_StepDefinitions.user_should_see_title_changed_to_web_orders()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:02.534Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 30,
        "name": "Something happens",
        "description": "",
        "id": "simple-examples-of-how-datatables-work;something-happens",
        "after": [
          {
            "result": {
              "duration": 1001000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 32,
            "name": "User should see below words displayed",
            "match": {
              "location": "com.cybertek.step_definitions.DataTables_StepDefinitions.user_should_see_below_words_displayed(java.util.List\u003cjava.lang.String\u003e)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Apple"
                ]
              },
              {
                "cells": [
                  "Kiwi"
                ]
              },
              {
                "cells": [
                  "Orange"
                ]
              },
              {
                "cells": [
                  "Broccoli"
                ]
              },
              {
                "cells": [
                  "Watermelon"
                ]
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Simple examples of how dataTables work",
    "description": "",
    "id": "simple-examples-of-how-datatables-work",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/dataTables.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-02-19T21:46:55.229Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 4,
        "name": "Etsy default title verification",
        "description": "",
        "id": "etsy-search-feature;etsy-default-title-verification",
        "after": [
          {
            "result": {
              "duration": 1003000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6020000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 5,
            "name": "user is on the Etsy landing page",
            "match": {
              "location": "com.cybertek.step_definitions.Etsy_StepDefinitions.user_is_on_the_etsy_landing_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "user should see Etsy title as",
            "match": {},
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@etsy"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:02.286Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 12,
        "name": "Etsy search title verification",
        "description": "",
        "id": "etsy-search-feature;etsy-search-title-verification",
        "after": [
          {
            "result": {
              "duration": 1005000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1501000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "user is on the Etsy landing page",
            "match": {
              "location": "com.cybertek.step_definitions.Etsy_StepDefinitions.user_is_on_the_etsy_landing_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3814000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "user searches for \"wooden spoon\"",
            "match": {
              "arguments": [
                {
                  "val": "\"wooden spoon\"",
                  "offset": 18
                }
              ],
              "location": "com.cybertek.step_definitions.Etsy_StepDefinitions.userSearchesFor(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "user should see \"Wooden spoon\" in the Etsy title",
            "match": {
              "arguments": [
                {
                  "val": "\"Wooden spoon\"",
                  "offset": 16
                }
              ],
              "location": "com.cybertek.step_definitions.Etsy_StepDefinitions.userShouldSeeInTheEtsyTitle(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@etsy"
          }
        ]
      }
    ],
    "name": "Etsy search feature",
    "description": "",
    "id": "etsy-search-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/etsySearch.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-02-19T21:47:03.576Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 7,
        "name": "Search page title verification",
        "description": "",
        "id": "google-search-functionality;search-page-title-verification",
        "after": [
          {
            "result": {
              "duration": 1003000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 944000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User is on Google home page",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_is_on_google_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User should see title is Google",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_should_see_title_is_google()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:05.539Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 11,
        "name": "User search title verification",
        "description": "",
        "id": "google-search-functionality;user-search-title-verification",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 735000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User is on Google home page",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_is_on_google_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2622000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User searches for apple",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_searches_for_apple()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User should see apple in the title",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_should_see_apple_in_the_title()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:09.918Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 17,
        "name": "User search title verification",
        "description": "",
        "id": "google-search-functionality;user-search-title-verification",
        "after": [
          {
            "result": {
              "duration": 1005000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 437000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User is on Google home page",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_is_on_google_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2167000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User searches for \"apple\"",
            "match": {
              "arguments": [
                {
                  "val": "\"apple\"",
                  "offset": 18
                }
              ],
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_searches_for(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 20,
            "name": "User should see \"apple\" in the title",
            "match": {
              "arguments": [
                {
                  "val": "\"apple\"",
                  "offset": 16
                }
              ],
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_should_see_in_the_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@wip"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:13.541Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Google home page footer links verification",
        "description": "",
        "id": "google-search-functionality;google-home-page-footer-links-verification",
        "after": [
          {
            "result": {
              "duration": 1000000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 360000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User is on Google home page",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_is_on_google_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User should see following links",
            "match": {
              "location": "com.cybertek.step_definitions.Google_StepDefinitions.user_should_see_following_links(java.util.List\u003cjava.lang.String\u003e)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Advertising"
                ]
              },
              {
                "cells": [
                  "Business"
                ]
              },
              {
                "cells": [
                  "How Search Works"
                ]
              },
              {
                "cells": [
                  "Privacy"
                ]
              },
              {
                "cells": [
                  "Terms"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@googleDataTable"
          }
        ]
      }
    ],
    "name": "Google search functionality",
    "description": "  Agile Story: As a user, when I am on the google\n  search page, I should be able to search whatever\n  I want, and see relevant information",
    "id": "google-search-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/googleSearch.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "User is already in login page",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "user is on the login page",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_is_on_the_login_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:08.660Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 11,
        "name": "Login as librarian",
        "description": "",
        "id": "library-app-login-feature;login-as-librarian",
        "after": [
          {
            "result": {
              "duration": 1003000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "user enters librarian username",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_enters_librarian_username()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "user enter librarian password",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_enter_librarian_password()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "user should see dashboard",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.userShouldSeeDashboard()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@1"
          },
          {
            "name": "@librarian"
          },
          {
            "name": "@employee"
          }
        ]
      },
      {
        "line": 7,
        "name": "User is already in login page",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "user is on the login page",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_is_on_the_login_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:09.676Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 17,
        "name": "Login as student",
        "description": "",
        "id": "library-app-login-feature;login-as-student",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "user enters student username",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.userEntersStudentUsername()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "user enters student password",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.userEntersStudentPassword()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 20,
            "name": "user should see dashboard",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.userShouldSeeDashboard()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@1"
          },
          {
            "name": "@student"
          }
        ]
      },
      {
        "line": 7,
        "name": "User is already in login page",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "user is on the login page",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_is_on_the_login_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:10.692Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpDatabase()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Login as admin",
        "description": "",
        "id": "library-app-login-feature;login-as-admin",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.closeDBConnection()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "user enters admin username",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_enters_admin_username()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "user enters admin password",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.user_enters_admin_password()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "user should see dashboard",
            "match": {
              "location": "com.cybertek.step_definitions.Library_StepDefinitions.userShouldSeeDashboard()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@1"
          },
          {
            "name": "@admin"
          },
          {
            "name": "@employee"
          },
          {
            "name": "@db"
          }
        ]
      }
    ],
    "name": "Library app login feature",
    "description": "  As a user, I should be able to login with correct credentials to different accounts. And dashboard should be displayed.\n  Accounts are: librarian, student, admin",
    "id": "library-app-login-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/login.feature",
    "tags": [
      {
        "name": "@1",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-02-19T21:47:11.761Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 23,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;2",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1024000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"jamal\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"jamal\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 369000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"jamal\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"jamal\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:14.862Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 24,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;3",
        "after": [
          {
            "result": {
              "duration": 1002000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 622000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"shirin\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"shirin\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 373000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"shirin\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"shirin\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:17.624Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 25,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;4",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 829000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 141000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"jair\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"jair\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 283000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"jair\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"jair\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:20.534Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 26,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;5",
        "after": [
          {
            "result": {
              "duration": 1001000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 628000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"daniel\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"daniel\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 424000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"daniel\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"daniel\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:23.347Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 27,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;6",
        "after": [
          {
            "result": {
              "duration": 1005000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 583000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"omer\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"omer\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 280000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"omer\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"omer\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:25.914Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 28,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;7",
        "after": [
          {
            "result": {
              "duration": 1003000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 671000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"ruslan\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"ruslan\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 204000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"ruslan\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"ruslan\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:28.649Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 29,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;8",
        "after": [
          {
            "result": {
              "duration": 1002000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 529000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"cj\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"cj\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 142000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 352000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"cj\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"cj\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:31.275Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 30,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;9",
        "after": [
          {
            "result": {
              "duration": 1000000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 671000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"ayah\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"ayah\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 135000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"ayah\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"ayah\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:33.927Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 31,
        "name": "User ordering a product from Orders page",
        "description": "",
        "id": "smartbear-order-feature;user-ordering-a-product-from-orders-page;;10",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 605000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 6,
            "name": "User is logged into SmartBear Tester account and on Order page",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_is_logged_into_smart_bear_tester_account_and_on_order_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 7,
            "name": "User fills out the form as followed from the table below:",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_fills_out_the_form_as_followed_from_the_table_below()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User selects \"MyMoney\" from product dropdown",
            "match": {
              "arguments": [
                {
                  "val": "\"MyMoney\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_from_product_dropdown(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User enters \"2\" to quantity",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_quantity(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User enters \"chuck norris\" to costumer name",
            "match": {
              "arguments": [
                {
                  "val": "\"chuck norris\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_costumer_name(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User enters \"122 london st\" to street",
            "match": {
              "arguments": [
                {
                  "val": "\"122 london st\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_street(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 12,
            "name": "User enters \"london\" to city",
            "match": {
              "arguments": [
                {
                  "val": "\"london\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_city(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 13,
            "name": "User enters \"chelsea\" to state",
            "match": {
              "arguments": [
                {
                  "val": "\"chelsea\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_state(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 14,
            "name": "User enters \"55323\" to zip",
            "match": {
              "arguments": [
                {
                  "val": "\"55323\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_zip(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User selects \"visa\" as card type",
            "match": {
              "arguments": [
                {
                  "val": "\"visa\"",
                  "offset": 13
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_selects_as_card_type(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User enters \"3333555533335555\" to card number",
            "match": {
              "arguments": [
                {
                  "val": "\"3333555533335555\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_card_number(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User enters \"12/21\" to expiration date",
            "match": {
              "arguments": [
                {
                  "val": "\"12/21\"",
                  "offset": 12
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_enters_to_expiration_date(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User clicks process button",
            "match": {
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_clicks_process_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 221000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 19,
            "name": "User verifies \"chuck norris\" is in the list",
            "match": {
              "arguments": [
                {
                  "val": "\"chuck norris\"",
                  "offset": 14
                }
              ],
              "location": "com.cybertek.step_definitions.ScenarioOutlines_StepDefinitions.user_verifies_is_in_the_list(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@scenarioOutline"
          }
        ]
      }
    ],
    "name": "Smartbear order feature",
    "description": "",
    "id": "smartbear-order-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/scenarioOutlines.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-02-19T21:47:14.981Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 7,
        "name": "Wikipedia search title verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-title-verification",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1119000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 8,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 82000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 9,
            "name": "User types \"Steve Jobs\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1143000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 10,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 11,
            "name": "User sees \"Steve Jobs\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:18.373Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 14,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification",
        "after": [
          {
            "result": {
              "duration": 1002000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 153000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 15,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 16,
            "name": "User types \"Steve Jobs\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1166000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 17,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 167000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 18,
            "name": "User sees \"Steve Jobs\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@wiki"
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:20.931Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 30,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;2",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 227000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Steve Jobs\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 982000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 244000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Steve Jobs\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Steve Jobs\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Steve Jobs\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:23.483Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 31,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;3",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png",
                "name": "Wikipedia search header verification"
              }
            ],
            "result": {
              "duration": 1769000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 137000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Kuzzat Altay\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Kuzzat Altay\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 716000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError\n\tat org.junit.Assert.fail(Assert.java:87)\n\tat org.junit.Assert.assertTrue(Assert.java:42)\n\tat org.junit.Assert.assertTrue(Assert.java:53)\n\tat com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(Wiki_StepDefinitions.java:48)\n\tat ✽.User sees \"Kuzzat Altay\" in the main header(file:///Users/dastanabdubek/Desktop/IntelliJ%20Projects/cybertek21-cucumber-junit/src/test/resources/features/wikipediaSearch.feature:25)\n",
              "duration": 318000000,
              "status": "failed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Kuzzat Altay\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Kuzzat Altay\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Kuzzat Altay\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Kuzzat Altay\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:26.488Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 32,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;4",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 186000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Kobe Bryant\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Kobe Bryant\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1295000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 309000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Kobe Bryant\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Kobe Bryant\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Kobe Bryant\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Kobe Bryant\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:29.408Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 33,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;5",
        "after": [
          {
            "result": {
              "duration": 1001000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 158000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Elon Musk\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Elon Musk\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 901000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 201000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Elon Musk\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Elon Musk\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Elon Musk\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Elon Musk\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:31.757Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 34,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;6",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 188000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Bill Gates\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Bill Gates\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 812000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 268000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Bill Gates\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Bill Gates\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Bill Gates\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Bill Gates\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:34.117Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 35,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;7",
        "after": [
          {
            "result": {
              "duration": 1003000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 112000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Chuck Norris\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Chuck Norris\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 682000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Chuck Norris\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Chuck Norris\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Chuck Norris\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Chuck Norris\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2021-02-19T21:47:36.192Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.setUpScenario()"
            }
          }
        ],
        "line": 36,
        "name": "Wikipedia search header verification",
        "description": "",
        "id": "wikipedia-search-feature;wikipedia-search-header-verification;search-terms-we-are-going-to-search-in-wikipedia;8",
        "after": [
          {
            "result": {
              "duration": 1004000000,
              "status": "passed"
            },
            "match": {
              "location": "com.cybertek.step_definitions.Hooks.tearDownScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 100000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 22,
            "name": "User is on Wikipedia home page",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_is_on_wikipedia_home_page()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 23,
            "name": "User types \"Marie Curie\" in the wiki search box",
            "match": {
              "arguments": [
                {
                  "val": "\"Marie Curie\"",
                  "offset": 11
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_types_in_the_wiki_search_box(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 633000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 24,
            "name": "User clicks wiki search button",
            "match": {
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_clicks_wiki_search_button()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 188000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 25,
            "name": "User sees \"Marie Curie\" in the main header",
            "match": {
              "arguments": [
                {
                  "val": "\"Marie Curie\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.userSeesInTheMainHeader(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runBeforeSteps()"
                }
              }
            ],
            "line": 26,
            "name": "User sees \"Marie Curie\" is in the wiki title",
            "match": {
              "arguments": [
                {
                  "val": "\"Marie Curie\"",
                  "offset": 10
                }
              ],
              "location": "com.cybertek.step_definitions.Wiki_StepDefinitions.user_sees_is_in_the_wiki_title(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "com.cybertek.step_definitions.Hooks.runsAfterSteps()"
                }
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Wikipedia search feature",
    "description": "  As a user, I should be able to search terms and see related results",
    "id": "wikipedia-search-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/wikipediaSearch.feature",
    "tags": []
  }
]